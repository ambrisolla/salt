name: Test States, Pillars and Returner 
on: push
  ##pull_request:
  ##    types:
  ##      - opened
  ##    branches:
  ##      - main
  ##      - develop
env:
  TEMP_ENVIRON_STATES_DIR: /srv/validate_salt
  TEMP_ENVIRON_PILLAR_DIR: /srv/validate_pillar
  PGPASSWORD:              ${{ secrets.PGPASSWORD }}
jobs:
  test_database_tables:
    name: Test Returners database connection
    environment: ${{ github.base_ref == 'main' && 'prod' || 'nprod' }}
    runs-on: 
      - salt
      - ${{ github.base_ref == 'main' && 'prod' || 'nprod' }}
    strategy:
      matrix:
        returner_tables:
          - jids
          - salt_returns
          - salt_events
    steps:
      - name: Test table ${{ matrix.returner_tables }}
        run: |
          psql \
            -h ${{ vars.PGHOST }} \
            -p ${{ vars.PGPORT }} \
            -U ${{ vars.PGUSER }} \
            -c "select count(*) from ${{ matrix.returner_tables }}"    
  test:
    name: Test Salt States and Salt Pillars
    environment: ${{ github.base_ref == 'main' && 'prod' || 'nprod' }}
    runs-on: 
      - salt
      - ${{ github.base_ref == 'main' && 'prod' || 'nprod' }}
    steps:
      - uses: actions/checkout@v3

      - name: Create temporary environment
        run: |
          set -e
          sudo rm -rf ${TEMP_ENVIRON_STATES_DIR}/* ${TEMP_ENVIRON_PILLAR_DIR}/*
          sudo mkdir -p ${TEMP_ENVIRON_STATES_DIR} ${TEMP_ENVIRON_PILLAR_DIR}
          sudo rsync -av salt/* ${TEMP_ENVIRON_STATES_DIR}/ --delete
          sudo rsync -av pillar/* ${TEMP_ENVIRON_PILLAR_DIR}/ --delete
      
      - name: Check Salt Pillars and Salt States
        run: |
          STATES=$( 
            find ${TEMP_ENVIRON_STATES_DIR} -name "*.sls" | \
            egrep -v "top.sls$|\/reactor\/|\/win/\repo-ng\/" | \
            sed "s/\/init.sls//g;s/.sls//g" | \
            sed "s@${TEMP_ENVIRON_STATES_DIR}\/@@g" | \
            sed "s/\//./g" )
          for state in ${STATES[@]}
          do
            check=$( salt-call state.sls_exists ${state} saltenv=${SALT_ENV} --out=json 2>> ${LOG_FILE} | jq -r '.local' )
            case "${check}" in
              true)  message="PASSED" ;;
              false) message="FAILED" ;;
            esac
            echo -ne " - checking state: ${state}... ${message}\n"
            status_list+=(${check})
          done


  #test_states_and_pillars:
  #  name: Test Salt States and Salt Pillars
  #  environment: ${{ github.base_ref == 'main' && 'prod' || 'nprod' }}
  #  runs-on: 
  #    - salt
  #    - ${{ github.base_ref == 'main' && 'prod' || 'nprod' }}
  #  steps:     
  #    - uses: actions/checkout@v3
  #    - name: Create temporary environment to test States and Pillars
  #      run: |
  #        set -e
  #        sudo rm -rf ${STATES_DIR}/* ${PILLAR_DIR}/*
  #        sudo mkdir -p ${STATES_DIR} ${PILLAR_DIR}
  #        sudo rsync -av salt/* ${STATES_DIR}/ --delete
  #        sudo rsync -av pillar/* ${PILLAR_DIR}/ --delete
  #    - name: Check Salt Pillars and Salt States
  #      run: |
  #        sudo .github/workflows/scripts/validate.sh ${STATES_DIR} ${PILLAR_DIR} ${SALT_ENV}
  #    - name: Remove temporary environment
  #      run: sudo rm -rf ${STATES_DIR} ${PILLAR_DIR}